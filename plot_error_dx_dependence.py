import numpy as np
import os
import matplotlib.pyplot as plt
import math
np.set_printoptions(threshold=np.inf)

# 4-pin, L_x=L_y=3.2, Diffusion, XS-1group
ref_n = 1000
n_vals = [40,41,42,43,44,45,46,47,48,49,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,155,160,165,170,175,180,185,190,195,200,205,210,215,220,225,230,235,240,245,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390,400,410,420,430,440,450,460,470,490,510,530,550,600]
l_inf_string = '''0.06713525 0.25344962 0.11273303 0.24464206 0.07376709 0.22181675
 0.11075692 0.22776358 0.063395   0.19374678 0.02849012 0.14081175
 0.06438215 0.05208474 0.04978187 0.10164784 0.04731218 0.07858747
 0.0723518  0.0434568  0.09930511 0.0234637  0.0762449  0.05187209
 0.05137956 0.03713025 0.03618985 0.07297234 0.02809386 0.05056961
 0.03783505 0.02707769 0.02649389 0.02265222 0.00823202 0.050242
 0.04937007 0.02637895 0.04430477 0.01361752 0.02061778 0.02708254
 0.03564369 0.01054724 0.01367779 0.01397501 0.03059244 0.03111377
 0.02214484 0.03419784 0.01366478 0.03893293 0.01392084 0.02568088
 0.01538876 0.01482877 0.01832698 0.01767721 0.03070061 0.00869176
 0.01755328 0.05143485 0.0058888  0.04770366 0.01493112 0.03902755
 0.02346255 0.03626556 0.00326318 0.03156099 0.01545216 0.03444788
 0.0222131  0.03329253 0.00357067 0.02958226 0.01294402 0.02654428
 0.00470065 0.02343538 0.00504564 0.00594187 0.0113966  0.01890115
 0.00885768 0.01118965 0.00971817 0.0026437  0.00817007 0.00257775
 0.00590103 0.01243418 0.00352396 0.00723334 0.00213987 0.0032637
 0.00512706 0.00563232 0.00242345 0.01245508 0.00162739 0.00455084
 0.00225489 0.00416118 0.004823   0.0013415  0.00177315 0.01312385'''
l_inf = [float(x) for x in l_inf_string.split()]
l_2_string = '''0.04018121 0.07642446 0.06783813 0.07472269 0.05686242 0.06169998
 0.07892434 0.07074288 0.03708597 0.05008348 0.01137776 0.10131702
 0.04484191 0.02204362 0.03670574 0.07387347 0.0307777  0.05597839
 0.04326296 0.02704349 0.06876938 0.01259287 0.05254265 0.03850987
 0.0324972  0.02944184 0.01963868 0.0472072  0.01766156 0.03021913
 0.02512127 0.01139971 0.01827645 0.00991469 0.001748   0.03538149
 0.03007425 0.01418474 0.02814556 0.00547391 0.00754553 0.01930667
 0.02154937 0.00492038 0.00355699 0.00204906 0.02000051 0.01461467
 0.01378034 0.0202757  0.00599608 0.02531726 0.00710758 0.01440976
 0.0091239  0.00633511 0.01294237 0.01187307 0.01746495 0.00365706
 0.00678809 0.01462524 0.00203745 0.01370715 0.00746313 0.00907894
 0.01368332 0.008064   0.00059493 0.0064434  0.00574562 0.00877314
 0.01543661 0.00919694 0.00150852 0.00693438 0.0085938  0.00556382
 0.00188407 0.00400648 0.00308943 0.0025553  0.00603606 0.00387559
 0.00586497 0.00652425 0.00656835 0.00040044 0.00448661 0.00090902
 0.00275554 0.00093118 0.00117001 0.00375336 0.00066756 0.00157226
 0.00212407 0.00376556 0.00052752 0.0012235  0.00025892 0.00205958
 0.00105426 0.00181544 0.00286945 0.00048321 0.00077863 0.0015022'''
l_2 = [float(x) for x in l_2_string.split()]

print("n vals: ", n_vals)
print("l_inf: ", l_inf)
print("l_2: ", l_2)
for i in range(len(n_vals)):
    plt.plot(n_vals, l_inf)
    plt.xlabel("n_x")
    plt.ylabel("L_inf error")
plt.figure()
for i in range(len(n_vals)):
    plt.plot(1/np.array(n_vals), l_inf)
    plt.xlabel(r'$\Delta x$')
    plt.ylabel("L_inf error")
plt.figure()
for i in range(len(n_vals)):
    plt.plot(n_vals, l_2)
    plt.xlabel("n_x")
    plt.ylabel("L_2 error")
plt.figure()
for i in range(len(n_vals)):
    plt.plot(1/np.array(n_vals), l_2)
    plt.xlabel(r'$\Delta x$')
    plt.ylabel("L_2 error")
plt.show()